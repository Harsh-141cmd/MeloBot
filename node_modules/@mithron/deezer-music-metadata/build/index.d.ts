import { AxiosRequestConfig } from "axios";
export declare enum Type {
    PLAYLIST = "playlist",
    ALBUM = "album",
    SONG = "song"
}
export declare enum SearchType {
    ALL = "all",
    ALBUM = "album",
    ARTIST = "artist",
    PLAYLIST = "playlist",
    PODCAST = "podcast",
    RADIO = "radio",
    TRACK = "track",
    USER = "user"
}
export interface SearchOptions {
    type?: SearchType;
    limit?: number;
    index?: number;
    axiosOptions?: AxiosRequestConfig;
}
export interface SearchResult {
    data: any[];
    total: number;
    prev?: string;
    next?: string;
}
export interface SearchError {
    error: {
        type: string;
        message: string;
        code: number;
    };
}
export interface Artist {
    name: string;
    url: string;
    image?: string;
}
export interface Track {
    name: string;
    url: string;
    duration: number;
    author: Artist[];
    thumbnail: Thumbnail[];
    type: "song";
}
export interface Playlist {
    name: string;
    url: string;
    tracks: Track[];
    artist: Artist;
    description: string;
    thumbnail: Thumbnail[];
    type: "playlist" | "album";
}
export interface Thumbnail {
    width: number;
    height: number;
    url: string;
}
export declare function validateURL(url: string): Type | "share-link" | undefined;
export declare function getData(url: string, options?: AxiosRequestConfig): Promise<Playlist | Track | undefined>;
export declare function search(query: string, options?: SearchOptions): Promise<SearchResult | SearchError | undefined>;
